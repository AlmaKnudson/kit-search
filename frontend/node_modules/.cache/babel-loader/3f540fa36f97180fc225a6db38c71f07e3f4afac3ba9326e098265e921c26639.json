{"ast":null,"code":"var _jsxFileName = \"/Users/almaknudson/biobots/biobot-kit-search/packages/frontend/src/components/AutoCompleteSearch.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoCompleteSearch = () => {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [status, setStatus] = useState(null);\n  useEffect(() => {\n    // Fetch the list from the API\n    axios.get('/api/items').then(response => {\n      const options = response.data.map(item => ({\n        label: item.name,\n        value: item.id\n      }));\n      setOptions(options);\n    }).catch(error => {\n      console.error('An error occurred while fetching items:', error);\n    });\n  }, []);\n  const handleSelectionChange = selectedOption => {\n    setSelectedItem(selectedOption);\n\n    // Fetch the status from the API using the selected item\n    if (selectedOption && 'value' in selectedOption) {\n      axios.get(`/api/status?id=${selectedOption.value}`).then(response => {\n        setStatus(response.data.status);\n      }).catch(error => {\n        console.error('An error occurred while fetching status:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search for Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      onChange: handleSelectionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Status: \", status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoCompleteSearch, \"rrpta5RdB4wuHcyy71IUe1b8EHw=\");\n_c = AutoCompleteSearch;\nexport default AutoCompleteSearch;\nvar _c;\n$RefreshReg$(_c, \"AutoCompleteSearch\");","map":{"version":3,"names":["React","useState","useEffect","Select","axios","jsxDEV","_jsxDEV","AutoCompleteSearch","_s","options","setOptions","selectedItem","setSelectedItem","status","setStatus","get","then","response","data","map","item","label","name","value","id","catch","error","console","handleSelectionChange","selectedOption","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["/Users/almaknudson/biobots/biobot-kit-search/packages/frontend/src/components/AutoCompleteSearch.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport axios from 'axios';\n\ninterface ItemOption {\n  label: string;\n  value: string;\n}\n\nconst AutoCompleteSearch: React.FC = () => {\n  const [options, setOptions] = useState<ItemOption[]>([]);\n  const [selectedItem, setSelectedItem] = useState<ItemOption | null>(null);\n  const [status, setStatus] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Fetch the list from the API\n    axios.get('/api/items')\n      .then(response => {\n        const options = response.data.map((item: { name: string; id: string; }) => ({\n          label: item.name,\n          value: item.id,\n        }));\n        setOptions(options);\n      })\n      .catch(error => {\n        console.error('An error occurred while fetching items:', error);\n      });\n  }, []);\n\n  const handleSelectionChange = (selectedOption: ValueType<OptionTypeBase>) => {\n    setSelectedItem(selectedOption);\n    \n    // Fetch the status from the API using the selected item\n    if (selectedOption && 'value' in selectedOption) {\n      axios.get(`/api/status?id=${selectedOption.value}`)\n        .then(response => {\n          setStatus(response.data.status);\n        })\n        .catch(error => {\n          console.error('An error occurred while fetching status:', error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Search for Items</h1>\n      <Select\n        options={options}\n        onChange={handleSelectionChange}\n      />\n      {status && (\n        <div>\n          <h2>Status: {status}</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AutoCompleteSearch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,kBAA4B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAe,EAAE,CAAC;EACxD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAoB,IAAI,CAAC;EACzE,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACW,GAAG,CAAC,YAAY,CAAC,CACpBC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMR,OAAO,GAAGQ,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAEC,IAAmC,KAAM;QAC1EC,KAAK,EAAED,IAAI,CAACE,IAAI;QAChBC,KAAK,EAAEH,IAAI,CAACI;MACd,CAAC,CAAC,CAAC;MACHd,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC,CACDgB,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,qBAAqB,GAAIC,cAAyC,IAAK;IAC3EjB,eAAe,CAACiB,cAAc,CAAC;;IAE/B;IACA,IAAIA,cAAc,IAAI,OAAO,IAAIA,cAAc,EAAE;MAC/CzB,KAAK,CAACW,GAAG,CAAE,kBAAiBc,cAAc,CAACN,KAAM,EAAC,CAAC,CAChDP,IAAI,CAACC,QAAQ,IAAI;QAChBH,SAAS,CAACG,QAAQ,CAACC,IAAI,CAACL,MAAM,CAAC;MACjC,CAAC,CAAC,CACDY,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE,CAAC,CAAC;IACN;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB5B,OAAA,CAACH,MAAM;MACLM,OAAO,EAAEA,OAAQ;MACjB0B,QAAQ,EAAEP;IAAsB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACDrB,MAAM,iBACLP,OAAA;MAAAwB,QAAA,eACExB,OAAA;QAAAwB,QAAA,GAAI,UAAQ,EAACjB,MAAM;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAjDID,kBAA4B;AAAA6B,EAAA,GAA5B7B,kBAA4B;AAmDlC,eAAeA,kBAAkB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}